#if !canImport(ObjectiveC)
import XCTest

extension AABBTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AABBTests = [
        ("testAABBComplexIntersection", testAABBComplexIntersection),
        ("testAABBIntersection", testAABBIntersection),
        ("testAABBIntersectionSharingEdges", testAABBIntersectionSharingEdges),
        ("testAABBNoIntersection", testAABBNoIntersection),
        ("testAABBNoIntersectionComplex", testAABBNoIntersectionComplex),
        ("testAABBWithPointsMixed", testAABBWithPointsMixed),
        ("testAABBWithPointsSimple", testAABBWithPointsSimple),
    ]
}

extension BodyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BodyTests = [
        ("testPointNormalsNotANumber", testPointNormalsNotANumber),
    ]
}

extension ClosedShapeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClosedShapeTests = [
        ("testCircle", testCircle),
        ("testCircleSixPoints", testCircleSixPoints),
        ("testOffsetTransformVertices", testOffsetTransformVertices),
        ("testRectangle", testRectangle),
        ("testRotateTransformVertices", testRotateTransformVertices),
        ("testSquare", testSquare),
    ]
}

extension GeomUtilsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GeomUtilsTests = [
        ("testLineRatio", testLineRatio),
        ("testLineRatioCentralized", testLineRatioCentralized),
    ]
}

extension JelloSwiftTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JelloSwiftTests = [
        ("testAABB", testAABB),
        ("testBitmask", testBitmask),
    ]
}

extension PhysicsMathTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PhysicsMathTest = [
        ("testVector2Dist", testVector2Dist),
        ("testVector2Math", testVector2Math),
        ("testVector2Perp", testVector2Perp),
        ("testVector2Rotate", testVector2Rotate),
    ]
}

extension PointMassTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PointMassTests = [
        ("testVelocityAccumulation", testVelocityAccumulation),
    ]
}

extension Vector2Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Vector2Tests = [
        ("testAverageVectorPerformance", testAverageVectorPerformance),
        ("testCompoundMatrix", testCompoundMatrix),
        ("testMatrixRotate", testMatrixRotate),
        ("testMatrixScale", testMatrixScale),
        ("testMatrixTranslate", testMatrixTranslate),
        ("testMax", testMax),
        ("testMin", testMin),
    ]
}

extension WorldTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WorldTests = [
        ("testBitmaskSetRange", testBitmaskSetRange),
        ("testBitmasksIntersect", testBitmasksIntersect),
        ("testCollisionSolveSquares", testCollisionSolveSquares),
        ("testGenerateBitmaskCenter", testGenerateBitmaskCenter),
        ("testGenerateBitmaskFilling", testGenerateBitmaskFilling),
        ("testGenerateBitmaskLimitBounds", testGenerateBitmaskLimitBounds),
        ("testGenerateBitmaskMaximum", testGenerateBitmaskMaximum),
        ("testGenerateBitmaskMinimum", testGenerateBitmaskMinimum),
        ("testGenerateBitmaskNaN", testGenerateBitmaskNaN),
        ("testGenerateBitmaskQuarter", testGenerateBitmaskQuarter),
        ("testGenerateBitmaskSmallRect", testGenerateBitmaskSmallRect),
        ("testRayCast", testRayCast),
        ("testRayCast2", testRayCast2),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AABBTests.__allTests__AABBTests),
        testCase(BodyTests.__allTests__BodyTests),
        testCase(ClosedShapeTests.__allTests__ClosedShapeTests),
        testCase(GeomUtilsTests.__allTests__GeomUtilsTests),
        testCase(JelloSwiftTests.__allTests__JelloSwiftTests),
        testCase(PhysicsMathTest.__allTests__PhysicsMathTest),
        testCase(PointMassTests.__allTests__PointMassTests),
        testCase(Vector2Tests.__allTests__Vector2Tests),
        testCase(WorldTests.__allTests__WorldTests),
    ]
}
#endif
